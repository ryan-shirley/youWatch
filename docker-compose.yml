version: "3"

services:
  flask:
    build: ./flask
    container_name: flask
    restart: always
    environment:
      - APP_NAME=MyFlaskApp
      - REDIS_HOST=redis_server
    expose:
      - 8080

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"

  redis_server:
    container_name: redis_server
    image: redis
    command: redis-server --appendonly yes
    volumes:
        - redis_data:/data

  worker:
    build:
      context: ./deep-learning
    command: "python3 -u worker.py"
    environment:
      - REDIS_HOST=redis_server
      - DROPBOX_API_KEY=${DROPBOX_API_KEY}
      - IFTTT_WEBHOOK=${IFTTT_WEBHOOK}
      - SLACK_WEBHOOK=${SLACK_WEBHOOK}
      - FAMILY_DEVICE_IPS=${FAMILY_DEVICE_IPS}
    depends_on:
      - redis_server
    restart: always
    volumes:
      - "${HOST_FILES}:/app/files"
      - "${HOST_MODELS}:/app/models"

  watcher:
    container_name: watcher
    build:
      context: ./deep-learning
    environment:
      - REDIS_HOST=redis_server
      - DROPBOX_API_KEY=${DROPBOX_API_KEY}
      - IFTTT_WEBHOOK=${IFTTT_WEBHOOK}
      - SLACK_WEBHOOK=${SLACK_WEBHOOK}
      - FAMILY_DEVICE_IPS=${FAMILY_DEVICE_IPS}
    command: python3 -u run_watcher.py
    depends_on:
      - redis_server
    restart: always
    volumes:
      - "${HOST_FILES}:/app/files"
      - "${HOST_MODELS}:/app/models"

volumes:
  redis_data: